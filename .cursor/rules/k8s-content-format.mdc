---
globs: content/*k8s*.md,content/*cka*.md,content/*ckad*.md,content/*cks*.md
description: k8s 학습 콘텐츠(CKA/CKAD/CKS 등)를 기술 블로그에 배포하기 위한 일관된 작성 포맷 가이드라인
---

# Kubernetes 학습 콘텐츠 블로그 배포 가이드라인

이 규칙은 k8s 학습 내용(문제, 풀이, 해설 등)을 기술 블로그에 일관되게 배포하기 위한 포맷 가이드라인입니다.

## 📋 필수 Front Matter 구조

모든 k8s 관련 콘텐츠는 다음과 같은 front matter 구조를 따라야 합니다:

```yaml
---
title: "제목: 간결하고 구체적인 학습 주제 명시"
date: "YYYY-MM-DD"
excerpt: "요약: 다루는 k8s 개념과 실습 내용을 한 문장으로 설명"
category: "CKA|CKAD|CKS|Kubernetes"  # 적절한 카테고리 선택
tags: ["Kubernetes", "시험종류", "주요기술", "실습키워드", "Practice"]
image: ""  # 선택사항: 관련 이미지 URL
---
```

### Front Matter 작성 가이드라인

- **title**: "CKA 연습 XX — 핵심주제·관련기술·실습범위" 형식 권장
- **excerpt**: 네임스페이스부터 서비스까지의 실습 범위와 학습 포인트를 명시
- **category**: CKA, CKAD, CKS 중 해당하는 시험 유형 또는 일반 Kubernetes
- **tags**: 반드시 "Kubernetes"와 시험 유형을 포함하고, 다루는 기술 스택 추가

## 🏗️ 콘텐츠 구조 템플릿

### 1. 문제 섹션 (필수)
```markdown
# 문제 (실전 스타일)
- 구체적이고 실행 가능한 요구사항을 bullet point로 나열
- 실제 시험과 유사한 형태로 작성
- 네임스페이스, 리소스명, 설정값 등을 명확히 지정
```

### 2. 수험생 자연어 답안 섹션 (권장)
```markdown
# 수험생 자연어 답안
> 실제 수험생이 작성할 법한 자연어 형태의 답안을 인용문으로 표현
> 이는 문제 이해도를 점검하고 실제 시험 상황을 시뮬레이션
```

### 3. 해설 섹션 (필수)
```markdown
# 해설
- **핵심 개념 설명**: 왜 이런 방식으로 구현해야 하는지
- **주의사항**: 자주 놓치는 부분이나 실수하기 쉬운 포인트
- **실무 팁**: 실제 업무에서 유용한 추가 정보
- **관련 개념**: 연관된 k8s 개념들과의 관계 설명
```

### 4. 정답 YAML 섹션 (필수)
```markdown
# 정답 YAML
​```yaml
# 실제 동작하는 완전한 YAML 매니페스트
# 주석을 통해 핵심 포인트 설명
apiVersion: v1
kind: ...
# 이하 완전한 구성
​```
```

### 5. 검증 가이드 섹션 (필수)
```markdown
# 검증 가이드
​```bash
# 적용 명령어
kubectl apply -f solution.yaml

# 확인 명령어들
kubectl get ...
kubectl describe ...

# 테스트 명령어들
# 실제 동작을 확인할 수 있는 구체적인 명령어들
​```
```

### 6. 자주 하는 실수 & 회피법 섹션 (권장)
```markdown
# 자주 하는 실수 & 회피법
- **실수 유형**: 구체적인 실수 사례와 원인
- **회피 방법**: 실수를 방지하는 구체적인 방법
- **디버깅 팁**: 문제 발생 시 확인해야 할 포인트들
```

### 7. 실전 팁 섹션 (권장)
```markdown
# 실전 팁
- 시험 시간을 절약할 수 있는 명령어나 방법
- kubectl의 유용한 옵션들
- 자주 사용하는 명령어 템플릿
```

### 8. 마무리 체크 섹션 (권장)
```markdown
# 마무리 체크(스스로 설명해보기)
- 핵심 개념을 스스로 설명할 수 있는지 점검 문항
- 이론과 실습을 연결하는 질문들
```

## 🎯 작성 시 주의사항

### 코드 블록 사용법
- **YAML**: 모든 k8s 매니페스트는 `yaml` 언어 태그 사용
- **Bash**: 모든 kubectl 명령어는 `bash` 언어 태그 사용
- **주석**: YAML 내에서 `#`으로 핵심 포인트 설명
- **코드 간격**: 너무 긴 줄은 피하고, 적절한 들여쓰기로 가독성 향상

### 폰트 및 가독성 가이드라인
- **본문 폰트**: 기본 14px (text-sm), 줄간격 1.6 유지
- **코드 블록**: 13px monospace 폰트, 줄간격 1.4로 밀도 높게
- **제목 크기**: H1(3xl), H2(2xl), H3(xl), H4(lg)로 계층적 구조
- **간격 최적화**: 섹션 간 적절한 여백으로 스캔 가능성 향상

### 용어 일관성
- **리소스 이름**: kebab-case 사용 (예: web-pod, api-service)
- **네임스페이스**: 의미있는 이름 사용 (예: cka-01, practice-ns)
- **라벨**: key=value 형식으로 일관되게 표기

### 실용성 강조
- 모든 YAML은 실제로 동작하는 완전한 형태여야 함
- 검증 명령어는 실제 실행 가능해야 함
- 실무에서 유용한 팁과 베스트 프랙티스 포함
- 코드 블록 내 주석은 간결하고 핵심만 표현

## 📚 카테고리별 특화 가이드라인

### CKA (Certified Kubernetes Administrator)
- 클러스터 관리, 네트워킹, 스토리지, 트러블슈팅 중심
- 실제 클러스터 운영 시나리오 반영
- 시스템 레벨의 이해도 필요한 문제들

### CKAD (Certified Kubernetes Application Developer)
- 애플리케이션 배포, 설정, 관찰 중심
- 개발자 관점의 k8s 활용법
- Pod, Service, ConfigMap, Secret 등 애플리케이션 리소스 중심

### CKS (Certified Kubernetes Security Specialist)
- 보안 정책, RBAC, 네트워크 정책 중심
- 보안 모범 사례와 취약점 분석
- 실제 보안 시나리오 기반 문제들

## 📝 품질 체크리스트

배포 전 다음 항목들을 반드시 확인:

- [ ] Front matter의 모든 필수 필드가 올바르게 작성되었는가?
- [ ] 문제가 구체적이고 실행 가능한가?
- [ ] YAML 매니페스트가 실제로 동작하는가?
- [ ] 검증 명령어들이 올바르게 작성되었는가?
- [ ] 해설이 충분히 상세하고 교육적인가?
- [ ] 실무에 도움이 되는 팁이 포함되어 있는가?
- [ ] 맞춤법과 문법이 올바른가?
- [ ] 코드 블록의 언어 태그가 올바르게 설정되었는가?

이 가이드라인을 따라 작성하면 일관되고 고품질의 k8s 학습 콘텐츠를 생산할 수 있습니다.